<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="FindBestConfiguration" AssemblyFile="$(CoreFxToolsTaskDir)CoreFx.Tools.dll"/>
  <PropertyGroup>
    <ImportedBuildVerticalTargets>true</ImportedBuildVerticalTargets>
  </PropertyGroup>

  <!-- Import configuration data model -->
  <Import Project="$(MSBuildThisFileDirectory)src/Tools/GenerateProps/properties.props" />

  <!-- Runs during traversal to select which projects and configurations of those projects to build -->
  <Target Name="AnnotateAndFilterProjects"
          BeforeTargets="BuildAllProjects;TestAllProjects">

    <!-- find the best configuration for each project, projects that shouldn't build for this configuration
         return an empty item.  -->
    <MSBuild Targets="FindBestConfiguration"
             Projects="@(Project)"
             Condition="'$(BuildAllConfigurations)' != 'true'">
      <Output TaskParameter="TargetOutputs"
              ItemName="_ProjectBestConfigurations" />
    </MSBuild>
    <MSBuild Targets="GetBuildConfigurations"
             Projects="@(Project)"
             Condition="'$(BuildAllConfigurations)' == 'true'">
      <Output TaskParameter="TargetOutputs"
              ItemName="_ProjectBestConfigurations" />
    </MSBuild>

    <ItemGroup>
      <!-- transform back to project -->
      <ProjectWithConfiguration Include="@(_ProjectBestConfigurations->'%(OriginalItemSpec)')">
        <AdditionalProperties>Configuration=%(Identity);%(_ProjectBestConfigurations.AdditionalProperties)</AdditionalProperties>
      </ProjectWithConfiguration>
    </ItemGroup>

    <ItemGroup>
      <Project Remove="@(Project)" />
      <Project Include="@(ProjectWithConfiguration)" />
    </ItemGroup>
  </Target>

  <!-- Runs in a leaf project (eg: csproj) to determine best configuration if one exists for purposes of filtering -->
  <Target Name="FindBestConfiguration"
          Returns="$(_BestConfiguration)">

    <!-- if BuildConfigurations is defined, find the best one -->
    <FindBestConfiguration Condition="'$(BuildConfigurations)' != ''"
                           Properties="@(Property)"
                           PropertyValues="@(PropertyValue)"
                           BuildConfigurations="$(BuildConfigurations)"
                           BuildConfiguration="$(BuildConfiguration)">
      <Output TaskParameter="BestConfiguration" PropertyName="_BestConfiguration" />
    </FindBestConfiguration>

    <!-- if BuildConfigurations is not defined, use BuildConfiguration -->
    <PropertyGroup>
      <_BestConfiguration Condition="'$(BuildConfigurations)' == ''">$(BuildConfiguration)</_BestConfiguration>
    </PropertyGroup>
  </Target>
  
  <!-- Runs in a leaf project (eg: csproj) to determine all configurations -->
  <Target Name="GetBuildConfigurations"
          Returns="$(_AllBuildConfigurations)">
     <PropertyGroup>
       <_AllBuildConfigurations>$(BuildConfigurations)</_AllBuildConfigurations>
       <_AllBuildConfigurations Condition="'$(BuildConfigurations)' == ''">$(BuildConfiguration)</_AllBuildConfigurations>
     </PropertyGroup>
  </Target>

  <!-- Runs in a leaf project (csproj) to determine best configuration for ProjectReferences -->
  <Target Name="AnnotateProjectReference"
          BeforeTargets="BeforeResolveReferences"
          Inputs="%(ProjectReference.Identity)"
          Outputs="unused">

    <!-- Get all configurations for each ProjectReference.  -->
    <MSBuild Targets="GetBuildConfigurations"
             Projects="@(ProjectReference)">
      <Output TaskParameter="TargetOutputs" PropertyName="_projectReferenceBuildConfigurations" />
    </MSBuild>
    
    <PropertyGroup>
      <_projectReferenceConfiguration>%(ProjectReference.Configuration)</_projectReferenceConfiguration>
      <_projectReferenceBuildConfigurations>;$(_projectReferenceBuildConfigurations);</_projectReferenceBuildConfigurations>
    </PropertyGroup>

    <Error Condition="'$(_projectReferenceConfiguration)' != '' AND !$(_projectReferenceBuildConfigurations.Contains(';$(_projectReferenceConfiguration);'))"
           Text="Configuration '$(_projectReferenceConfiguration)' was specified for project reference @(ProjectReference) but that is not in the list of supported BuildConfigurations '$(_projectReferenceBuildConfigurations)'" />

    <!-- Find the best configuration for the current Project's Configuration -->
    <FindBestConfiguration Condition="'$(_projectReferenceConfiguration)' == ''"
                           Properties="@(Property)"
                           PropertyValues="@(PropertyValue)"
                           BuildConfigurations="$(_ProjectReferenceBuildConfigurations)"
                           BuildConfiguration="$(Configuration)">
      <Output TaskParameter="BestConfiguration" PropertyName="_projectReferenceConfiguration" />
    </FindBestConfiguration>
    
    <Message Text="Could not find a configuration for '@(ProjectReference)' when building '$(Configuration)' from configurations '$(_projectReferenceBuildConfigurations)'. Trying BuildConfiguration '$(BuildConfiguration)'." />

    <!-- Find the best configuration for the current BuildConfiguration -->
    <FindBestConfiguration Condition="'$(_projectReferenceConfiguration)' == ''"
                           Properties="@(Property)"
                           PropertyValues="@(PropertyValue)"
                           BuildConfigurations="$(_ProjectReferenceBuildConfigurations)"
                           BuildConfiguration="$(BuildConfiguration)">
      <Output TaskParameter="BestConfiguration" PropertyName="_projectReferenceConfiguration" />
    </FindBestConfiguration>

    <Error Condition="'$(_projectReferenceConfiguration)' == ''" Text="Could not find a configuration for '@(ProjectReference)' when building '$(Configuration)' from configurations '$(_projectReferenceBuildConfigurations)'." />
  
    <ItemGroup>
      <ProjectReference>
        <AdditionalProperties>Configuration=$(_projectReferenceConfiguration);%(ProjectReference.AdditionalProperties)</AdditionalProperties>
      </ProjectReference>
    </ItemGroup>
  </Target>
</Project>